Presenters: Ilyas, Ram, Ravi, and Utkarsh | March 25, 2017

Please refer to ilias-it83.github.io/cloud/compare, for that discussed in the session and more.
Multi-cloud hosting gains importance. Competing clouds can be complimentary too.
EC2 is the oldest service offering, preceded by SQS, and S3. EC2 auto scaling is relatively matured and "Azure Virtual Machine Scale Set" is quickly catching up.
Azure Service Fabric is the backend engine that manages conformance and compliance for all of the compute instances powered by Azure PaaS.
MSFT does not fire up entire DCs which is in a way cost effective. At any given point, only the minimal infrastructure shall be utilised. AWS on the other hand, with fully fired DCs, has the spot instance selling proposition as a unique selling point of view. Microsoft is in discussion about including this in their roadmap.
There are bootstrapping differences between the two clouds due to the way the underlying resource mapping happens from systems-services' availability and reliability standpoint, hence the difference in the time to launch a compute instance in either cloud, with AWS having an edge.
LXCs, Linux Containers, have been in rounds since 10 years. DC/OS, Docker Swarm, Kubernetes, EC2 container registry are related to this concept. Google containers are not supported by AWS, the only unsupported container.
Containerisation is not a direct threat to Virtualisation but complements by abstracting each of the application and its ecosystem, consisting of packages, libraries, and configuration specifics involved. Containerisation is effective with compute clusters. Microsoft provides Azure Container Service based on Docker containers*, abstracts the creation and configuration of multi-compute clusters.
Kubernates from Google, DC/OS from Mesosphere, and Docker Swarm from Docker are infamous in this service domain. Changes to the container environment is stored in its registry.
Amazon Lighsail: This is kind of related to the Virtual Private Servers concept, primarily used by services providers such as RackSpace. We may kind of draw parallels to this service to a Pod and a partial functional equivalent to Azure DevTest Labs. Whereas VPC is a full-fledged environment more toward Production, Lightsai could helps with quickly managing Non-Production environments.*
Batch services with either of the clouds is about leveraging distributed computing (HPC) resources and delivering voluminous batches. Both support multiple batch file types like WAR, BAT, etc. Azure or AWS batch is candidate for jobs each of which can be modularised and could be collectively run on different compute instances. AWS Elastic Transcoder is leveraged for media services. Monolithic jobs may not be candidates for batch services of cloud scale. Batch service draws heavily on the micro services application model.
PaaS is the future of cloud, and fortunately Microsoft Azure was founded as PaaS, hence the strong hold in that sphere. AWS Elastic Beanstalk / Azure Web App have similar features with Microsoft having en edge being an early runner.
Sharepoint online (SaaS) is 15% different (generalised for cloud use), hence not suitable for porting enterprise deployments. Also, there is no PaaS equivalent as yet, due to the involvement of different resources/services, few of which are qualified to be PaaS services themselves. It shall be a possibility later. Presently IaaS is best suitable for custom, implementations, better off in a hybrid-model with SharePoint 2016, details on Go-NoGo at  https://www.avepoint.com/blog/avepoint-blog/5-reasons-youll-love-hybrid-sharepoint-2016/*.
Containerisation and platform services are not similar but have mutually complementing functions.
AWS Lambda / Azure functions are effective but candidate only for compute services needing shorter time frame. They are not candidates for long running services; Azure/AWS batch are suitable for long-running jobs. Nevertheless, they can be integrated with many application services. They are better off than Microsoft PowerShell scripting-web hooks. If running a script is the only work, then hosting it on AWS Lambda/Azure functions make sense than host it on a compute instance.
Azure storage: 150 accounts / 500 TB limit; Block blob 100 MB. More information on limits, quotas, and constraints at https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits.
Cloud storage concept: Fail fast and fail small; possible with abundantly redundant commodity hardware.
AWS: While EC2 instances may fail persistently, Elastic Block Storage (Block/Raw storage volume) helps offset it due to their independent life cycle management methods. EBS volumes can be increased, seamlessly. It had this option for increasing IOPS/throughput since a long time. MS Azure has come up with a discrete modelling of IOPS and bucketing them (Typing and Categorization) and mapping with specific VM T-Shirt sizes. Ephemeral storage is also block storage but bundled with EC2 instances at a reasonable/low cost.
AWS EFS is MS AFS equivalent and either can mounted across 100+ compute instances unlike an AWS EBS/ Azure Page blob which can only be mounted to a specific compute instance.
Azure cool storage is AWS Glacier equivalent.
Azure Storage Gateway helps interfacing in hybrid scenarios by being located inside the on-premise systems as kind of an agent. While AWS provides software appliance Azure provides a hardware as well as software appliances. The hardware appliance provides greater archival methodology benefit; nevertheless caution need to be exercised in terms of planning for cost effectiveness through governance.
AWS RDS / SQL Azure provide relational, structured data processing services. IMHO, AWS provides PaaS by grouping multiple database flavours of many vendors interfaced by their platform (RDS) engine to kind of translate/integrate requests between varied application platforms and their respective databases.
AWS/Azure also provide non-relational/unstructured highly scalable database service. AWS DynamoDB is not exactly No-SQL DB. Azure DocumentDB on the other hand is similar to MongoDB and can be leveraged for codes wrote, for example, for MongoDB. ElastiCache is a cache PaaS offering, with Azure ReDis cache equivalent in Azure. This service will also offload caching from mainstream database bound caching mechanisms such as Apache CouchDB.
DW: AWS Redshift is a PostgreSQL equivalent for storing massive data and perform analytics. Azure SQL DW is an equivalent service but has an Massively Parallel Processing (MPP) engine, poly-based which is a USP for a DW compared to a DB kind of service.
AWS DB Migration Service has no equivalent. Microsoft roadmap has proposed a similar service. Nevertheless, MS SQL 2016 has come up with the conception of stretch databases which can handle migration seamless but for SQL services only at this point in time.
Trivia: AWS is largest consumer of Windows licenses across geographies.
AWS Snowball Edge is a service for massive data transfer. Ship containers with arrays of storage can be transported from customer premise to select AWS DCs for import and store. Azure Import/Export service does the same but in considerably smaller chunks.
Cisco can help extending public cloud services by abstracting their existing WAN services.
Azure has an inherent perimeter layer security; Azure WAF can help at app layer.
Learning resources: edx.org, Channel 9, Azure Youtube channel, Microsoft partner networks learning paths, azure platform.azurewebsites.net.

* - Solicitation required
